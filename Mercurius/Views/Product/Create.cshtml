@using Mercurius.Entities;

@model Mercurius.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Enter New Product";
}

<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm("Create", "Product"))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(m => m.ProductNum, new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(m => m.ProductNum, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ProductNum, String.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Name, String.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "control-label col-md-2" })
        @Html.TextAreaFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Description, String.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.SourceVendorId, new { @class = "control-label col-md-2" })
        @Html.DropDownListFor(m => m.SourceVendorId, new SelectList(Model.Vendors, "Value", "Text"), "Select a Vendor", new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.SourceVendorId, String.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.CheckBoxFor(m => m.IsActive, new { htmlAttributes = new { @class = "form-control" } })
        @Html.LabelFor(m => m.IsActive, new { @class = "control-label col-md-2" })
        @Html.ValidationMessageFor(m => m.IsActive, String.Empty, new { @class = "text-danger" })
    </div>

    <div id="dateActivated" class="form-group">
        @Html.LabelFor(m => m.DateActivated, new { @class="control-label col-md-2" })
        @Html.EditorFor(m => m.DateActivated)
        @Html.ValidationMessageFor(m => m.DateActivated, String.Empty, new { @class = "text-danger"})
    </div>

    <div class="div">
        <input type="submit" value="Save Product" class="btn btn-primary" />
    </div>
</div>


<script>
    const cbIsActive = document.querySelector("#IsActive");
    const dvDateActivated = document.querySelector('#dateActivated');
    dvDateActivated.style.display = 'none';

    cbIsActive.addEventListener('change', setBlockElementDisplayOnVisibility);

    function setBlockElementDisplayOnVisibility(e) {
        setBlockElementDisplayOnVisibility(dvDateActivated, e.target.checked);
    }

</script>
    
}


